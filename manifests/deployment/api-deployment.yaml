apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: api
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: api
    spec:
      containers:
        - env:
            - name: API_ENV
              value: local
            - name: CLIENT_URL
              value: http://localhost:3000
            - name: CONTENT_FETCH_URL
              value: http://content-fetch:8080/?token=some_token
            - name: GATEWAY_URL
              value: http://localhost:8080/api
            - name: IMAGE_PROXY_SECRET
              value: some-secret
            - name: JAEGER_HOST
              value: jaeger
            - name: JWT_SECRET
              value: some_secret
            - name: PG_DB
              value: omnivore
            - name: PG_HOST
              value: postgres
            - name: PG_PASSWORD
              value: postgres
            - name: PG_POOL_MAX
              value: "20"
            - name: PG_PORT
              value: "5432"
            - name: PG_USER
              value: postgres
            - name: REDIS_URL
              value: "'redis://redis:6379'"
            - name: SSO_JWT_SECRET
              value: some_sso_secret
          image: sejaeger/omnivore-api:f603e4e52
          livenessProbe:
            exec:
              command:
                - nc -z 0.0.0.0 8080 || exit 1
            periodSeconds: 15
            timeoutSeconds: 90
          name: omnivore-api
          ports:
            - containerPort: 8080
              protocol: TCP
      restartPolicy: Always
